var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var user = require('config/models');

exports.register = function(name, email, mobile, password, location, callback){

	var x = email;
	if(x != null){
		if(!(x.indexOf("@") == x.length)){
			if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && 
				password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
	 
				var temp =rand(160, 36);
				var newpass = temp + password;
				var token = crypto.createHash('sha512').update(email +rand).digest("hex");
				var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");

				var newUser = new user({
					token : token,
					name : name,
					email : email,
					mobile : mobile,
					hashed_password : hashed_password,
					location : location,
					salt : temp
				});

				user.find({email:email}, function(err, users){
					var len = users.length;

					if (len == 0) {
						newUser.save(function(err){
							callback({'response': 'Successfully Registered...'});
						});
					} else {
						callback({'response': 'Email already registered!!'});
					}
				});
			} else {
				callback({'response': 'Password Weak!!'});
			}
		} else {
			callback({'response': 'Email not valid!!'});
		}
	} else {
		callback({'response': 'No Field Should be Empty'});
	}
}
